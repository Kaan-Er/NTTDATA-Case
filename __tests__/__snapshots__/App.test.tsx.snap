// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render BasketCard correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 10,
      "elevation": 5,
      "flexDirection": "row",
      "gap": 4,
      "margin": 8,
      "opacity": 1,
      "shadowOffset": {
        "height": 3,
        "width": 0,
      },
      "shadowOpacity": 0.18,
      "shadowRadius": 4.59,
    }
  }
>
  <View
    style={
      [
        undefined,
        {
          "flex": undefined,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "overflow": "hidden",
          },
          [
            {
              "aspectRatio": null,
              "flex": 0,
              "height": undefined,
              "resizeMode": "cover",
              "width": 80,
            },
            {
              "borderRadius": 10,
              "flex": 1,
            },
          ],
        ]
      }
    >
      <FastImageView
        defaultSource={null}
        resizeMode="cover"
        source={
          {
            "uri": "https://loremflickr.com/640/480",
          }
        }
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flex": 1,
        "flexDirection": "column",
        "gap": 16,
        "justifyContent": "space-between",
        "padding": 8,
        "paddingVertical": 12,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "alignSelf": undefined,
              "color": "#3A3A3A",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
              "textAlignVertical": undefined,
              "textDecorationLine": undefined,
            },
            undefined,
          ]
        }
      >
        Test
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderColor": "#D9D9D9",
            "borderRadius": 8,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 4,
            "paddingVertical": 4,
          }
        }
      >
        <View
          style={
            [
              null,
              undefined,
            ]
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="20"
            bbWidth="20"
            color="#3A3A3A"
            fill="none"
            focusable={false}
            height="20"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "flex": 0,
                  "height": 20,
                  "width": 20,
                },
              ]
            }
            tintColor="#3A3A3A"
            vbHeight={24}
            vbWidth={24}
            width="20"
            xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M14.74 9.00003L14.394 18M9.606 18L9.26 9.00003M19.228 5.79003C19.57 5.84203 19.91 5.89703 20.25 5.95603M19.228 5.79003L18.16 19.673C18.1164 20.2383 17.8611 20.7662 17.445 21.1513C17.029 21.5364 16.4829 21.7502 15.916 21.75H8.084C7.5171 21.7502 6.97102 21.5364 6.55498 21.1513C6.13894 20.7662 5.88359 20.2383 5.84 19.673L4.772 5.79003M19.228 5.79003C18.0739 5.61555 16.9138 5.48313 15.75 5.39303M4.772 5.79003C4.43 5.84103 4.09 5.89603 3.75 5.95503M4.772 5.79003C5.92613 5.61555 7.08623 5.48313 8.25 5.39303M15.75 5.39303V4.47703C15.75 3.29703 14.84 2.31303 13.66 2.27603C12.5536 2.24067 11.4464 2.24067 10.34 2.27603C9.16 2.31303 8.25 3.29803 8.25 4.47703V5.39303M15.75 5.39303C13.2537 5.20011 10.7463 5.20011 8.25 5.39303" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
"
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M14.74 9.00003L14.394 18M9.606 18L9.26 9.00003M19.228 5.79003C19.57 5.84203 19.91 5.89703 20.25 5.95603M19.228 5.79003L18.16 19.673C18.1164 20.2383 17.8611 20.7662 17.445 21.1513C17.029 21.5364 16.4829 21.7502 15.916 21.75H8.084C7.5171 21.7502 6.97102 21.5364 6.55498 21.1513C6.13894 20.7662 5.88359 20.2383 5.84 19.673L4.772 5.79003M19.228 5.79003C18.0739 5.61555 16.9138 5.48313 15.75 5.39303M4.772 5.79003C4.43 5.84103 4.09 5.89603 3.75 5.95503M4.772 5.79003C5.92613 5.61555 7.08623 5.48313 8.25 5.39303M15.75 5.39303V4.47703C15.75 3.29703 14.84 2.31303 13.66 2.27603C12.5536 2.24067 11.4464 2.24067 10.34 2.27603C9.16 2.31303 8.25 3.29803 8.25 4.47703V5.39303M15.75 5.39303C13.2537 5.20011 10.7463 5.20011 8.25 5.39303"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeWidth",
                    "strokeLinecap",
                    "strokeLinejoin",
                  ]
                }
                stroke={
                  {
                    "type": 2,
                  }
                }
                strokeLinecap={1}
                strokeLinejoin={1}
                strokeWidth="1.5"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            [
              {
                "borderRadius": 8,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": -33,
              },
              {
                "overflow": "hidden",
              },
            ]
          }
        >
          <RNLinearGradient
            colors={
              [
                0,
                0,
              ]
            }
            endPoint={
              {
                "x": 0,
                "y": 0,
              }
            }
            locations={null}
            startPoint={
              {
                "x": 1,
                "y": 0,
              }
            }
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": -33,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "gap": 12,
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderRadius": 8,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        >
          <View
            style={
              [
                null,
                undefined,
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="20"
              bbWidth="20"
              color="#FFFFFF"
              fill="none"
              focusable={false}
              height="20"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "transform": [
                      {
                        "scaleX": 1,
                      },
                    ],
                  },
                  {
                    "flex": 0,
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
              tintColor="#FFFFFF"
              vbHeight={24}
              vbWidth={24}
              width="20"
              xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19.5 12H4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
"
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M19.5 12H4.5"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    {
                      "type": 2,
                    }
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeWidth="1.5"
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            style={
              [
                {
                  "borderRadius": 8,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": -33,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
          >
            <RNLinearGradient
              colors={
                [
                  4285085429,
                  4285085429,
                ]
              }
              endPoint={
                {
                  "x": 0,
                  "y": 0,
                }
              }
              locations={null}
              startPoint={
                {
                  "x": 1,
                  "y": 0,
                }
              }
              style={
                [
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": -33,
                  },
                  {
                    "overflow": "hidden",
                  },
                ]
              }
            />
          </View>
        </View>
        <Text
          allowFontScaling={false}
          style={
            [
              {
                "alignSelf": undefined,
                "color": "#3A3A3A",
                "fontFamily": "Poppins-Medium",
                "fontSize": 18,
                "fontWeight": "400",
                "textAlign": "left",
                "textAlignVertical": undefined,
                "textDecorationLine": undefined,
              },
              undefined,
            ]
          }
        >
          1
        </Text>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "borderRadius": 8,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
              "paddingHorizontal": 4,
              "paddingVertical": 4,
            }
          }
        >
          <View
            style={
              [
                null,
                undefined,
              ]
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="20"
              bbWidth="20"
              color="#FFFFFF"
              fill="none"
              focusable={false}
              height="20"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "transform": [
                      {
                        "scaleX": 1,
                      },
                    ],
                  },
                  {
                    "flex": 0,
                    "height": 20,
                    "width": 20,
                  },
                ]
              }
              tintColor="#FFFFFF"
              vbHeight={24}
              vbWidth={24}
              width="20"
              xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 4.5V19.5M19.5 12H4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
"
              xmlns="http://www.w3.org/2000/svg"
            >
              <RNSVGGroup
                fill={null}
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M12 4.5V19.5M19.5 12H4.5"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    {
                      "type": 2,
                    }
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeWidth="1.5"
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
          <View
            style={
              [
                {
                  "borderRadius": 8,
                },
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": -33,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
          >
            <RNLinearGradient
              colors={
                [
                  4285085429,
                  4285085429,
                ]
              }
              endPoint={
                {
                  "x": 0,
                  "y": 0,
                }
              }
              locations={null}
              startPoint={
                {
                  "x": 1,
                  "y": 0,
                }
              }
              style={
                [
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": -33,
                  },
                  {
                    "overflow": "hidden",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "alignSelf": undefined,
              "color": "#6936F5",
              "fontFamily": "Poppins-Bold",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
              "textAlignVertical": undefined,
              "textDecorationLine": undefined,
            },
            undefined,
          ]
        }
      >
        100 ₺
      </Text>
    </View>
  </View>
</View>
`;

exports[`render ProductCard correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#FFFFFF",
      "borderRadius": 10,
      "elevation": 5,
      "flexDirection": "row",
      "gap": 4,
      "margin": 8,
      "opacity": 1,
      "shadowOffset": {
        "height": 3,
        "width": 0,
      },
      "shadowOpacity": 0.18,
      "shadowRadius": 4.59,
    }
  }
>
  <View
    style={
      [
        undefined,
        {
          "flex": undefined,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "overflow": "hidden",
          },
          [
            {
              "aspectRatio": null,
              "flex": 0,
              "height": undefined,
              "resizeMode": "cover",
              "width": 130,
            },
            {
              "borderRadius": 10,
              "flex": 1,
            },
          ],
        ]
      }
    >
      <FastImageView
        defaultSource={null}
        resizeMode="cover"
        source={
          {
            "uri": "https://loremflickr.com/640/480",
          }
        }
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "flex-start",
        "flex": 1,
        "flexDirection": "column",
        "gap": 8,
        "justifyContent": "space-between",
        "padding": 8,
        "paddingVertical": 12,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "alignSelf": undefined,
              "color": "#3A3A3A",
              "fontFamily": "Poppins-Bold",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
              "textAlignVertical": undefined,
              "textDecorationLine": undefined,
            },
            undefined,
          ]
        }
      >
        Test
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderColor": "#D9D9D9",
            "borderRadius": 8,
            "borderWidth": 1,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 4,
            "paddingVertical": 4,
          }
        }
      >
        <View
          style={
            [
              null,
              undefined,
            ]
          }
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight="18"
            bbWidth="18"
            color="#6936F5"
            fill="none"
            focusable={false}
            height="18"
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "transform": [
                    {
                      "scaleX": 1,
                    },
                  ],
                },
                {
                  "flex": 0,
                  "height": 18,
                  "width": 18,
                },
              ]
            }
            tintColor="#6936F5"
            vbHeight={24}
            vbWidth={24}
            width="18"
            xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M21 8.25C21 5.765 18.901 3.75 16.312 3.75C14.377 3.75 12.715 4.876 12 6.483C11.285 4.876 9.623 3.75 7.687 3.75C5.1 3.75 3 5.765 3 8.25C3 15.47 12 20.25 12 20.25C12 20.25 21 15.47 21 8.25Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
"
            xmlns="http://www.w3.org/2000/svg"
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M21 8.25C21 5.765 18.901 3.75 16.312 3.75C14.377 3.75 12.715 4.876 12 6.483C11.285 4.876 9.623 3.75 7.687 3.75C5.1 3.75 3 5.765 3 8.25C3 15.47 12 20.25 12 20.25C12 20.25 21 15.47 21 8.25Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeWidth",
                    "strokeLinecap",
                    "strokeLinejoin",
                  ]
                }
                stroke={
                  {
                    "type": 2,
                  }
                }
                strokeLinecap={1}
                strokeLinejoin={1}
                strokeWidth="1.5"
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            [
              {
                "borderRadius": 8,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": -33,
              },
              {
                "overflow": "hidden",
              },
            ]
          }
        >
          <RNLinearGradient
            colors={
              [
                0,
                0,
              ]
            }
            endPoint={
              {
                "x": 0,
                "y": 0,
              }
            }
            locations={null}
            startPoint={
              {
                "x": 1,
                "y": 0,
              }
            }
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": -33,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
    <Text
      allowFontScaling={false}
      style={
        [
          {
            "alignSelf": undefined,
            "color": "#6C6C6C",
            "fontFamily": "Poppins-Regular",
            "fontSize": 14,
            "fontWeight": "400",
            "textAlign": "left",
            "textAlignVertical": undefined,
            "textDecorationLine": undefined,
          },
          undefined,
        ]
      }
    >
      Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    </Text>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": "100%",
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          [
            {
              "alignSelf": undefined,
              "color": "#6936F5",
              "fontFamily": "Poppins-Bold",
              "fontSize": 16,
              "fontWeight": "400",
              "textAlign": "left",
              "textAlignVertical": undefined,
              "textDecorationLine": undefined,
            },
            undefined,
          ]
        }
      >
        100 ₺
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "borderRadius": 8,
            "flexDirection": "row",
            "justifyContent": "center",
            "opacity": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 4,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            [
              {
                "alignSelf": undefined,
                "color": "#FFFFFF",
                "fontFamily": "Poppins-Medium",
                "fontSize": 14,
                "fontWeight": "400",
                "textAlign": "left",
                "textAlignVertical": undefined,
                "textDecorationLine": undefined,
              },
              [
                undefined,
                {
                  "textAlignVertical": "bottom",
                },
                undefined,
              ],
            ]
          }
        >
          Add
        </Text>
        <View
          style={
            [
              {
                "borderRadius": 8,
              },
              {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "zIndex": -33,
              },
              {
                "overflow": "hidden",
              },
            ]
          }
        >
          <RNLinearGradient
            colors={
              [
                4285085429,
                4285085429,
              ]
            }
            endPoint={
              {
                "x": 0,
                "y": 0,
              }
            }
            locations={null}
            startPoint={
              {
                "x": 1,
                "y": 0,
              }
            }
            style={
              [
                {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": -33,
                },
                {
                  "overflow": "hidden",
                },
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`render Toast correctly 1`] = `null`;

exports[`renders Button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 4,
      "paddingVertical": 4,
    }
  }
>
  <View
    style={
      [
        {
          "borderRadius": 8,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": -33,
        },
        {
          "overflow": "hidden",
        },
      ]
    }
  >
    <RNLinearGradient
      colors={
        [
          4294967295,
          4294967295,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      locations={null}
      startPoint={
        {
          "x": 1,
          "y": 0,
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": -33,
          },
          {
            "overflow": "hidden",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders Button with icon correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 8,
      "flexDirection": "row",
      "justifyContent": "center",
      "opacity": 1,
      "paddingHorizontal": 4,
      "paddingVertical": 4,
    }
  }
>
  <View
    style={
      [
        null,
        undefined,
      ]
    }
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="24"
      bbWidth="24"
      color="#D9D9D9"
      fill="none"
      focusable={false}
      height="24"
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "transform": [
              {
                "scaleX": 1,
              },
            ],
          },
          {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      tintColor="#D9D9D9"
      vbHeight={24}
      vbWidth={24}
      width="24"
      xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12 4.5V19.5M19.5 12H4.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
"
      xmlns="http://www.w3.org/2000/svg"
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="M12 4.5V19.5M19.5 12H4.5"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.5"
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
  <View
    style={
      [
        {
          "borderRadius": 8,
        },
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": -33,
        },
        {
          "overflow": "hidden",
        },
      ]
    }
  >
    <RNLinearGradient
      colors={
        [
          4294967295,
          4294967295,
        ]
      }
      endPoint={
        {
          "x": 0,
          "y": 0,
        }
      }
      locations={null}
      startPoint={
        {
          "x": 1,
          "y": 0,
        }
      }
      style={
        [
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": -33,
          },
          {
            "overflow": "hidden",
          },
        ]
      }
    />
  </View>
</View>
`;

exports[`renders Header correctly 1`] = `
<Text
  allowFontScaling={false}
  style={
    [
      {
        "alignSelf": undefined,
        "color": "#3A3A3A",
        "fontFamily": "Poppins-Regular",
        "fontSize": 14,
        "fontWeight": "400",
        "textAlign": "left",
        "textAlignVertical": undefined,
        "textDecorationLine": undefined,
      },
      undefined,
    ]
  }
>
  Test
</Text>
`;

exports[`renders Icon correctly 1`] = `
<View
  style={
    [
      null,
      undefined,
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight="24"
    bbWidth="24"
    color="#D9D9D9"
    fill="none"
    focusable={false}
    height="24"
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      [
        {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        {
          "transform": [
            {
              "scaleX": 1,
            },
          ],
        },
        {
          "flex": 0,
          "height": 24,
          "width": 24,
        },
      ]
    }
    tintColor="#D9D9D9"
    vbHeight={24}
    vbWidth={24}
    width="24"
    xml="<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M11.54 22.351L11.61 22.391L11.638 22.407C11.749 22.467 11.8733 22.4985 11.9995 22.4985C12.1257 22.4985 12.25 22.467 12.361 22.407L12.389 22.392L12.46 22.351C12.8511 22.1191 13.2328 21.8716 13.604 21.609C14.5651 20.9305 15.463 20.1667 16.287 19.327C18.231 17.337 20.25 14.347 20.25 10.5C20.25 8.31196 19.3808 6.21354 17.8336 4.66637C16.2865 3.11919 14.188 2.25 12 2.25C9.81196 2.25 7.71354 3.11919 6.16637 4.66637C4.61919 6.21354 3.75 8.31196 3.75 10.5C3.75 14.346 5.77 17.337 7.713 19.327C8.53664 20.1667 9.43427 20.9304 10.395 21.609C10.7666 21.8716 11.1485 22.1191 11.54 22.351ZM12 13.5C12.7956 13.5 13.5587 13.1839 14.1213 12.6213C14.6839 12.0587 15 11.2956 15 10.5C15 9.70435 14.6839 8.94129 14.1213 8.37868C13.5587 7.81607 12.7956 7.5 12 7.5C11.2044 7.5 10.4413 7.81607 9.87868 8.37868C9.31607 8.94129 9 9.70435 9 10.5C9 11.2956 9.31607 12.0587 9.87868 12.6213C10.4413 13.1839 11.2044 13.5 12 13.5Z" fill="currentColor"/>
</svg>
"
    xmlns="http://www.w3.org/2000/svg"
  >
    <RNSVGGroup
      fill={null}
      propList={
        [
          "fill",
        ]
      }
    >
      <RNSVGPath
        clipRule={0}
        d="M11.54 22.351L11.61 22.391L11.638 22.407C11.749 22.467 11.8733 22.4985 11.9995 22.4985C12.1257 22.4985 12.25 22.467 12.361 22.407L12.389 22.392L12.46 22.351C12.8511 22.1191 13.2328 21.8716 13.604 21.609C14.5651 20.9305 15.463 20.1667 16.287 19.327C18.231 17.337 20.25 14.347 20.25 10.5C20.25 8.31196 19.3808 6.21354 17.8336 4.66637C16.2865 3.11919 14.188 2.25 12 2.25C9.81196 2.25 7.71354 3.11919 6.16637 4.66637C4.61919 6.21354 3.75 8.31196 3.75 10.5C3.75 14.346 5.77 17.337 7.713 19.327C8.53664 20.1667 9.43427 20.9304 10.395 21.609C10.7666 21.8716 11.1485 22.1191 11.54 22.351ZM12 13.5C12.7956 13.5 13.5587 13.1839 14.1213 12.6213C14.6839 12.0587 15 11.2956 15 10.5C15 9.70435 14.6839 8.94129 14.1213 8.37868C13.5587 7.81607 12.7956 7.5 12 7.5C11.2044 7.5 10.4413 7.81607 9.87868 8.37868C9.31607 8.94129 9 9.70435 9 10.5C9 11.2956 9.31607 12.0587 9.87868 12.6213C10.4413 13.1839 11.2044 13.5 12 13.5Z"
        fill={
          {
            "type": 2,
          }
        }
        fillRule={0}
        propList={
          [
            "fill",
            "fillRule",
          ]
        }
      />
    </RNSVGGroup>
  </RNSVGSvgView>
</View>
`;

exports[`renders TextInput correctly 1`] = `
<View
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#F9F9F9",
        "borderColor": "#F9F9F9",
        "borderRadius": 12,
        "borderWidth": 1,
        "elevation": 0,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 13,
        "shadowColor": undefined,
        "shadowOffset": {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0,
        "shadowRadius": 15,
      },
      undefined,
    ]
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "row",
        "marginHorizontal": 5,
      }
    }
  >
    <TextInput
      onBlur={[Function]}
      onChangeText={[Function]}
      onFocus={[Function]}
      placeholder="Test"
      placeholderTextColor="#C3C4C7"
      style={
        {
          "color": "#3A3A3A",
          "flex": 1,
          "fontFamily": "Poppins",
          "fontSize": 16,
          "textAlign": "left",
        }
      }
      textAlignVertical="top"
    />
  </View>
</View>
`;
